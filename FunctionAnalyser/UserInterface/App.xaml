<Application x:Class="UserInterface.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             DispatcherUnhandledException="Crash"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#BEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#C4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#2C628B"/>
        <SolidColorBrush x:Key="ToggleButton.Canvas.Background" Color="#ACACAC"/>
        <SolidColorBrush x:Key="ToggleButton.MouseOver.Background" Color="#78909C"/>
        <SolidColorBrush x:Key="ToggleButton.Pressed.Background" Color="#455A64"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ProgressBar.Foreground" Color="#00ACED"/>
        <SolidColorBrush x:Key="Generic.Disabled.Foreground" Color="#838383"/>
        <SolidColorBrush x:Key="CheckMark.Foreground" Color="#000000"/>

        <Canvas x:Key="checkMark" x:Shared="False">
            <Path Fill="{StaticResource CheckMark.Foreground}" Data="M 12.142499 3.2499999 6.5 9.0335002 3.857 6.5279999 2 8.3860007 6.5 12.75 14 5.1074999 Z"/>
        </Canvas>
        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="Padding" Value="10 0"></Setter>
            <Setter Property="Margin" Value="0 2"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Generic.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3 0 8 0"></Setter>
            <Setter Property="Margin" Value="2 4"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <StackPanel x:Name="panel" Orientation="Horizontal" SnapsToDevicePixels="true">
                            <Canvas x:Name="imageCanvas" Background="{StaticResource ToggleButton.Canvas.Background}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                <ContentControl x:Name="image"></ContentControl>
                            </Canvas>
                            <Border x:Name="contentBorder" BorderThickness="0 0 0 1.5" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" TargetName="image" Value="{StaticResource checkMark}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="contentBorder" Value="{StaticResource ToggleButton.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="contentBorder" Value="{StaticResource ToggleButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Generic.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Foreground}"></Setter>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Minimum" Value="0"></Setter>
            <Setter Property="Maximum" Value="1"></Setter>
        </Style>
    </Application.Resources>
</Application>
